input {
  pipeline {
    address => "fhir-enrich"
  }
}

filter {
  if [resource][resourceType] in ["Condition", "MedicationStatement", "Observation"] {
    mutate {
      gsub => [ "[resource][subject][reference]", "http://opencr:3000/fhir/", "" ]
    }

    # Enrich from HAPI FHIR
    http {
      url => "http://fhir:8080/fhir/%{[resource][subject][reference]}"
      target_body => "patient"
    }

    json {
      source => "patient"
      target => "patient"
      add_field => {
        "patient_gender" => "%{[patient][gender]}"
        "patient_dob" => "%{[patient][birthDate]}"
      }
    }
  } else {
    drop { }
  }

  mutate {
    remove_field => ["@version", "headers"]
  }
}

output {
  # workaround because of this: https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/940
  if [action] == "update" {
    elasticsearch {
      hosts => [ "es:9200" ]
      index => "fhir-enrich-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][resourceType]}/%{[resource][id]}"
      action => "update"
      doc_as_upsert => true
    }
  }

  if [action] == "delete" {
    elasticsearch {
      hosts => [ "es:9200" ]
      index => "fhir-enrich-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][resourceType]}/%{[resource][id]}"
      action => "delete"
      doc_as_upsert => true
    }
  }
}
