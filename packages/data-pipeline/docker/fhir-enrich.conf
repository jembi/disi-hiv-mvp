input {
  pipeline {
    address => "fhir-enrich"
  }
}

filter {
  sleep {
    # wait for raw data to be available
    time => "1"
  }

  mutate {
    add_field => { "enrich" => "true" }
  }

  mutate {
    remove_field => ["@version"]
  }

  if [resource][resourceType] == "Condition" {
    mutate {
      gsub => [ "[resource][subject][reference]", "http://opencr:3000/fhir/", "" ]
    }

    elasticsearch {
      hosts => ["es:9200"]
      query_template => "/usr/share/logstash/pipeline/id-query.json"
      fields => { "[resource][gender]" => "patient_gender" }
      index => "fhir-raw-patient"
    }
  }
}

output {
  # workaround because of this: https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/940
  if [action] == "update" {
    elasticsearch {
      hosts => [ "es:9200" ]
      index => "fhir-enrich-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][resourceType]}/%{[resource][id]}"
      action => "update"
      doc_as_upsert => true
    }
  }

  if [action] == "delete" {
    elasticsearch {
      hosts => [ "es:9200" ]
      index => "fhir-enrich-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][resourceType]}/%{[resource][id]}"
      action => "delete"
      doc_as_upsert => true
    }
  }

  # stdout {
  #   codec => rubydebug
  # }
}
