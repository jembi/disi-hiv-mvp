input {
  http {
    port => 5077
  }
}

filter {
  split {}

  csv {
    autodetect_column_names => true
    skip_header => true
  }

  de_dot {
    nested => true
  }

  # enrichment
  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    user => "elastic"
    password => "dev_password_only"
    index => "fhir-raw-organization"
    query => "resource.identifier.value:%{[registration][facilityCode]}"
    fields => {
      "[resource][address]" => "[@metadata][address]"
      "[resource][name]" => "[registration][facility][name]"
      "[resource][identifier]" => "[@metadata][identifier]"
    }
    remove_field => ["[registration][facilityID]"]
    add_field => {
      "[registration][facility][country]" => "%{[@metadata][address][0][country]}"
      "[registration][facility][state]" => "%{[@metadata][address][0][state]}"
      "[registration][facility][district]" => "%{[@metadata][address][0][district]}"
      "[registration][facility][city]" => "%{[@metadata][address][0][city]}"
    }
  }

  # TODO mocked, get from CR
  uuid {
    target => "cr_id"
    add_field => {
      "[@metadata][id]" => "report-patient-%{[cr_id]}"
    }
  }

  # TODO mocked, rather call CR to get this
  uuid {
    target => "[registration][golden_id_fingerprint]"
  }

  prune {
    whitelist_names => [ "registration", "hivDiagnosis", "entryToCare", "artInitiation", "cd4", "artRegimenSwitch", "viralSuppression", "death", "@timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => [ "es-analytics:9200" ]
    index => "fhir-report-patient"
    document_id => "%{[@metadata][id]}"
    action => "index"
    user => "elastic"
    password => "dev_password_only"
  }
}
