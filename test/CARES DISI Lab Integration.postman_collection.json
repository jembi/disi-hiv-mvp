{
	"info": {
		"_postman_id": "cd4f9061-6c2c-4340-81ef-1c6dbfd2875c",
		"name": "CARES DISI Lab Integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2252804"
	},
	"item": [
		{
			"name": "[EMR] Submit lab Order",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"resourceType\": \"Bundle\",\n  \"id\": \"{{bundleID}}\",\n  \"type\": \"transaction\",\n  \"entry\": [\n    {\n      \"fullUrl\": \"Task/{{labOrderTaskGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Task\",\n        \"id\": \"{{labOrderTaskGuid}}\",\n        \"status\": \"requested\",\n        \"intent\": \"order\",\n        \"identifier\": [\n          {\n            \"system\": \"http://example.com/fhir/lab-integration/test-order-number\",\n            \"value\": \"{{testOrderNumber}}\"\n          }\n        ],\n        \"requester\": {\n          \"reference\": \"Organization/{{requesterOrgFacilityCode}}\"\n        },\n        \"owner\": {\n          \"reference\": \"Organization/{{ownerOrgFacilityCode}}\"\n        },\n        \"lastModified\": \"{{taskLastModifiedDate}}\",\n        \"basedOn\": [\n          {\n            \"reference\": \"ServiceRequest/{{labOrderGuid}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{labOrderTaskGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"ServiceRequest/{{labOrderGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"ServiceRequest\",\n        \"id\": \"{{labOrderGuid}}\",\n        \"status\": \"active\",\n        \"intent\": \"order\",\n        \"subject\": {\n          \"reference\": \"Patient/{{randomRelatedPersonGuid}}\"\n        },\n        \"identifier\": [\n            {\n                \"system\": \"http://covid19laborder.org/order\",\n                \"value\": \"{{serviceRequestIdentifier}}\"\n            }\n        ],\n       \n        \"authoredOn\": \"{{serviceRequestAuthoredDate}}\",\n        \"reasonCode\": [\n          {\n            \"coding\": [\n              {\n                \"code\": \"{{serviceRequestReasonCode}}\",\n                \"system\": \"http://snomed.info/sct\"\n              }\n            ]\n          }\n        ],\n        \"requester\": {\n          \"reference\": \"Practitioner/{{requestingPractitionerGuid}}\"\n        },\n        \"specimen\": [\n          {\n            \"reference\": \"Specimen/{{specimenGuid}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{labOrderGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Practitioner/{{requestingPractitionerGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Practitioner\",\n        \"id\": \"{{requestingPractitionerGuid}}\",\n        \"name\": [\n          {\n            \"given\": [\n              \"{{randomFirstName}}\"\n            ],\n            \"family\": \"{{randomLastName}}\"\n          }\n        ],\n        \"telecom\": [\n          {\n            \"system\": \"phone\",\n            \"value\": \"{{$randomPhoneNumber}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{requestingPractitionerGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Patient/{{randomRelatedPersonGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Patient\",\n        \"id\": \"{{randomRelatedPersonGuid}}\",\n        \"meta\": {\n          \"profile\": [\n            \"http://example.com/fhir/example/StructureDefinition/covid19-patient\"\n          ]\n        },\n        \"identifier\": [\n            {\n                \"system\": \"http://openhie.org/fhir/covid19-casereporting/identifier/passport\",\n                \"value\": \"{{$guid}}\"\n            },\n            {\n                \"system\": \"http://openhie.org/fhir/covid19-casereporting/identifier/nid\",\n                \"value\": \"{{nid}}\"\n            },\n            {\n                \"system\": \"http://openhie.org/fhir/covid19-casereporting/identifier/facility{{randomClientId}}\",\n                \"value\": \"{{$guid}}\"\n            }\n        ],\n        \"extension\": [\n            {\n                \"url\": \"http://example.com/fhir/example/StructureDefinition/client-ward-division\",\n                \"valueString\": \"Division 9087\"\n            }\n        ],\n        \"active\": true,\n        \"name\": [\n            {\n                \"use\": \"official\",\n                \"family\": \"{{randomLastName}}\",\n                \"given\": [\n                    \"{{randomFirstName}}\"\n                ]\n            }\n        ],\n        \"telecom\": [\n            {\n                \"system\": \"phone\",\n                \"value\": \"{{$randomPhoneNumber}}\"\n            }\n        ],\n        \"gender\": \"{{gender}}\",\n        \"birthDate\": \"{{birthDate}}\",\n        \"address\": [\n            {\n                \"country\": \"{{randomCountry}}\",\n                \"state\": \"{{randomState}}\",\n                \"district\": \"{{randomDistrict}}\",\n                \"city\": \"{{randomCity}}\"\n            }\n        ],\n        \"contact\": [\n            {\n                \"relationship\": [\n                    {\n                        \"coding\": [\n                            {\n                                \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0131\",\n                                \"code\": \"N\"\n                            }\n                        ]\n                    }\n                ],\n                \"name\": {\n                    \"family\": \"John\"\n                },\n                \"telecom\": [\n                    {\n                        \"system\": \"phone\",\n                        \"value\": \"{{$randomPhoneNumber}}\"\n                    }\n                ]\n            }\n        ],\n        \"managingOrganization\": {\n          \"reference\": \"Organization/{{managingOrgFacilityCode}}\"\n        }\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{randomRelatedPersonGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Specimen/{{specimenGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Specimen\",\n        \"id\": \"{{specimenGuid}}\",\n         \"meta\": {\n            \"profile\": [\n                \"http://example.com/fhir/example/StructureDefinition/covid19-specimen\"\n            ]\n        },\n        \"identifier\": [\n            {\n                \"system\": \"http://covid19laborder.org/specimen\",\n                \"value\": \"{{specimenID}}\"\n            }\n        ],\n        \"type\": {\n          \"coding\": [\n            {\n                \"system\": \"http://snomed.info/sct\",\n                \"code\": \"{{specimenTypeCode}}\"\n            }\n          ]\n        },\n        \"collection\": {\n          \"collectedDateTime\": \"{{randomCollectionDate}}\"\n        }\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{specimenGuid}}\"\n      }\n    }\n  ]\n}\n"
				},
				"url": {
					"raw": "{{openhimUrl}}/fhir",
					"host": [
						"{{openhimUrl}}"
					],
					"path": [
						"fhir"
					]
				}
			},
			"response": []
		},
		{
			"name": "[LAB] Query new lab orders",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/Task?modified=ge2000-01-01&requester=Organization/HIVOrganizationExample&_include=Task:based-on:ServiceRequest&status=requested",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"Task"
					],
					"query": [
						{
							"key": "modified",
							"value": "ge2000-01-01"
						},
						{
							"key": "requester",
							"value": "Organization/HIVOrganizationExample"
						},
						{
							"key": "_include",
							"value": "Task:based-on:ServiceRequest"
						},
						{
							"key": "status",
							"value": "requested"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[LAB] Query specimen",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/Specimen/{{SpecimenID}}",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"Specimen",
						"{{SpecimenID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[LAB] Submit lab result",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"resourceType\": \"Bundle\",\n  \"id\": \"{{resultBundleID}}\",\n  \"type\": \"transaction\",\n  \"entry\": [\n    {\n      \"fullUrl\": \"Task/{{labOrderTaskGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Task\",\n        \"id\": \"{{labOrderTaskGuid}}\",\n        \"status\": \"completed\",\n        \"intent\": \"order\",\n        \"identifier\": [\n          {\n            \"system\": \"http://openhie.org/fhir/lab-integration/test-order-number\",\n            \"value\": \"{{testOrderNumber}}\"\n          }\n        ],\n        \"requester\": {\n          \"reference\": \"Organization/{{requesterOrgFacilityCode}}\"\n        },\n        \"owner\": {\n          \"reference\": \"Organization/{{ownerOrgFacilityCode}}\"\n        },\n        \"lastModified\": \"{{taskLastModifiedDate}}\",\n        \"basedOn\": [\n          {\n            \"reference\": \"ServiceRequest/{{labOrderGuid}}\"\n          }\n        ],\n        \"output\": [\n          {\n            \"type\": {\n              \"coding\": [\n                {\n                  \"code\": \"result\",\n                  \"system\": \"http://example.com/fhir/lab-integration/task-output\"\n                }\n              ]\n            },\n            \"valueReference\": {\n              \"reference\": \"DiagnosticReport/{{diagnosticReportGuid}}\"\n            }\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"PUT\",\n        \"url\": \"Task/{{labOrderTaskGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"DiagnosticReport/{{diagnosticReportGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"DiagnosticReport\",\n        \"id\": \"{{diagnosticReportGuid}}\",\n        \"status\": \"final\",\n        \"code\": {\n          \"coding\": [\n            {\n              \"code\": \"{{testRequestedCode}}\",\n              \"system\": \"http://loinc.org\"\n            }\n          ]\n        },\n        \"performer\": [\n          {\n            \"reference\": \"Practitioner/{{performingPractitionerGuid}}\"\n          }\n        ],\n        \"conclusion\": \"Some textual conclusion\",\n        \"result\": [\n          {\n            \"reference\": \"Observation/{{resultsGuid}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{diagnosticReportGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Practitioner/{{performingPractitionerGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Practitioner\",\n        \"id\": \"{{performingPractitionerGuid}}\",\n        \"name\": [\n          {\n            \"given\": [\n              \"{{randomFirstName}}\"\n            ],\n            \"family\": \"{{randomLastName}}\"\n          }\n        ],\n        \"telecom\": [\n          {\n            \"system\": \"phone\",\n            \"value\": \"{{$randomPhoneNumber}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Task/{{performingPractitionerGuid}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Specimen/{{specimenGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Specimen\",\n        \"id\": \"{{specimenGuid}}\",\n         \"meta\": {\n            \"profile\": [\n                \"http://example.com/fhir/example/StructureDefinition/covid19-specimen\"\n            ]\n        },\n        \"identifier\": [\n            {\n                \"system\": \"http://covid19laborder.org/specimen\",\n                \"value\": \"{{specimenID}}\"\n            }\n        ],\n        \"type\": {\n          \"coding\": [\n            {\n                \"system\": \"http://snomed.info/sct\",\n                \"code\": \"{{specimenTypeCode}}\"\n            }\n          ]\n        },\n        \"collection\": {\n          \"collectedDateTime\": \"{{randomCollectionDate}}\"\n        },\n        \"processing\": [\n          {\n            \"timeDateTime\": \"{{taskProcessedDate}}\"\n          }\n        ],\n        \"receivedTime\": \"{{taskReceivedDate}}\"\n      },\n      \"request\": {\n        \"method\": \"PUT\",\n        \"url\": \"Specimen/{{specimenID}}\"\n      }\n    },\n    {\n      \"fullUrl\": \"Observation/{{resultsGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Observation\",\n        \"id\": \"{{resultsGuid}}\",\n        \"meta\": {\n          \"profile\": [\n            \"http://example.com/fhir/example/StructureDefinition/covid19-test-results\"\n          ]\n        },\n        \"code\": {\n          \"coding\": [\n            {\n              \"code\": \"{{testRequestedCode}}\",\n              \"system\": \"http://loinc.org\"\n            }\n          ]\n        },\n        \"status\": \"final\",\n        \"subject\": {\n          \"reference\": \"Patient/{{randomRelatedPersonGuid}}\"\n        },\n        \"effectiveDateTime\": \"{{resultDate}}\",\n        \"valueCodeableConcept\": {\n            \"coding\": [\n                {\n                    \"system\": \"http://snomed.info/sct\",\n                    \"code\": \"{{resultCode}}\"\n                }\n            ]\n        }\n      },\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"Observation/{{resultsGuid}}\"\n      }\n    }\n  ]\n}\n"
				},
				"url": {
					"raw": "{{openhimUrl}}/fhir",
					"host": [
						"{{openhimUrl}}"
					],
					"path": [
						"fhir"
					]
				}
			},
			"response": []
		},
		{
			"name": "[LAB] Submit lab REJECTION",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"resourceType\": \"Bundle\",\n  \"id\": \"{{labRejectionBundleID}}\",\n  \"type\": \"transaction\",\n  \"entry\": [\n    {\n      \"fullUrl\": \"Task/{{labResultRejectionGuid}}\",\n      \"resource\": {\n        \"resourceType\": \"Task\",\n        \"id\": \"{{labResultRejectionGuid}}\",\n        \"status\": \"rejected\",\n        \"statusReason\": {\n          \"coding\": [\n            {\n              \"code\": \"{{sampleRejectionCode}}\",\n              \"system\": \"http://snomed.info/sct\",\n              \"display\": \"{{sampleRejectionDisplay}}\"\n            }\n          ]\n        },\n        \"intent\": \"order\",\n        \"identifier\": [\n          {\n            \"system\": \"http://example.com/fhir/lab-integration/test-order-number\",\n            \"value\": \"{{testOrderNumber}}\"\n          }\n        ],\n        \"requester\": {\n          \"reference\": \"Organization/{{requesterOrgFacilityCode}}\"\n        },\n        \"owner\": {\n          \"reference\": \"Organization/{{ownerOrgFacilityCode}}\"\n        },\n        \"lastModified\": \"{{taskLastModifiedDate}}\",\n        \"basedOn\": [\n          {\n            \"reference\": \"ServiceRequest/{{labOrderGuid}}\"\n          }\n        ]\n      },\n      \"request\": {\n        \"method\": \"PUT\",\n        \"url\": \"Task/{{labOrderTaskGuid}}\"\n      }\n    }\n  ]\n}\n"
				},
				"url": {
					"raw": "{{openhimUrl}}/fhir",
					"host": [
						"{{openhimUrl}}"
					],
					"path": [
						"fhir"
					]
				}
			},
			"response": []
		},
		{
			"name": "[EMR] Query new lab results",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/Task?owner=Organization/HIVOrganizationExample&status=completed",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"Task"
					],
					"query": [
						{
							"key": "owner",
							"value": "Organization/HIVOrganizationExample"
						},
						{
							"key": "status",
							"value": "completed"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[EMR] Query REJECTED lab results",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/Task?owner=HIVOrganizationExample/101283&status=rejected",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"Task"
					],
					"query": [
						{
							"key": "owner",
							"value": "HIVOrganizationExample/101283"
						},
						{
							"key": "status",
							"value": "rejected"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "[EMR] Query diagnostic report",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/DiagnosticReport/{{DiagnosticReportID}}",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"DiagnosticReport",
						"{{DiagnosticReportID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[EMR] Query observation",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/fhir+json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Custom test",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://openhimcore.qa.cares.gicsandbox.org/fhir/Observation/{{ObsID}}",
					"protocol": "https",
					"host": [
						"openhimcore",
						"qa",
						"cares",
						"gicsandbox",
						"org"
					],
					"path": [
						"fhir",
						"Observation",
						"{{ObsID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment');",
					"const uuid = require('uuid');",
					"",
					"const testResultCodes_SNOMED = ['10828004', '260385009', '419984006']",
					"const testRequestedCodes_SNOMED = ['94558-4', '94745-7']",
					"const serviceRequestReasonCodes_SNOMED = ['428792000', '243790003', '171367005', '171367005', '223366009', '34325006', '308273005', '170497006', '168260004', '255375007', '273407003', '264931009']",
					"const specimenTypes_SNOMED = ['258500001', '461911000000000', '119324002']",
					"//const orgs = ['CARESOrganizationExample', 'CARESOrganizationExample2', 'CARESOrganizationExample3']",
					"const orgs = ['HIVOrganizationExample', 'HIVOrganizationExample2', 'HIVOrganizationExample3']",
					"const testOrderNumber = getRandomInt(11111, 99999)",
					"const serviceRequestIdentifier = getRandomInt(1111111111, 9999999999)",
					"",
					"//Use these variable to keep track of submitted IDs for results/rejections.",
					"//Suggest adding static values",
					"",
					"    /*",
					"    //--Random Values--",
					"    pm.variables.set('specimenID', uuid.v4())",
					"    pm.variables.set('labOrderTaskGuid', uuid.v4())",
					"    pm.variables.set('resultCode', testResultCodes_SNOMED[getRandomInt(0, testResultCodes_SNOMED.length - 1)])",
					"    pm.variables.set('specimenTypeCode', specimenTypes_SNOMED[getRandomInt(0, specimenTypes_SNOMED.length - 1)])",
					"    pm.variables.set('testRequestedCode', testRequestedCodes_SNOMED[getRandomInt(0, testRequestedCodes_SNOMED.length - 1)])",
					"    pm.variables.set('randomRelatedPersonGuid', uuid.v4())",
					"    pm.variables.set('requesterOrgFacilityCode', orgs[getRandomInt(0, orgs.length - 1)])",
					"    pm.variables.set('ownerOrgFacilityCode', orgs[getRandomInt(0, orgs.length - 1)])",
					"    pm.variables.set('testOrderNumber', testOrderNumber)",
					"    pm.variables.set('labOrderGuid', uuid.v4())",
					"    */",
					"",
					"     ",
					"    //--Static Values--",
					"    pm.variables.set('specimenID', '5f93b0a6-f852-4ff5-8c64-22a116f04a9a')",
					"    pm.variables.set('labOrderTaskGuid', '10064fe541a-100f-4833-8d68-3d654422e28300221')",
					"    pm.variables.set('resultCode', '10828004')",
					"    pm.variables.set('specimenTypeCode', '258500001')",
					"    pm.variables.set('testRequestedCode', '94558-4')",
					"    pm.variables.set('randomRelatedPersonGuid', '0900b210-9cd5-4c7d-9a7c-5e13bfd93af3')",
					"    pm.variables.set('requesterOrgFacilityCode', 'HIVOrganizationExample')",
					"    pm.variables.set('ownerOrgFacilityCode', 'HIVOrganizationExample')",
					"    pm.variables.set('testOrderNumber', 100001)",
					"    pm.variables.set('labOrderGuid', '187f2fbd-1fd3-41af-a745-697b11322b7944')",
					"//",
					"",
					"const visitDate = moment().subtract((Math.random() * 10), 'years')",
					"const genders = ['male', 'female', 'other', 'unknown']",
					"const age = Math.floor(Math.random() * 70)",
					"const days = Math.floor(Math.random() * 10)",
					"",
					"const managingOrgFacilityCode = orgs[getRandomInt(0, orgs.length - 1)]",
					"",
					"",
					"const firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")",
					"const lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")",
					"const gender = genders[getRandomInt(0, genders.length - 1)]",
					"const dateOfBirth = moment(visitDate).subtract(age, 'years').format('YYYY-MM-DD')",
					"const addressCountry = \"QA Country\" ",
					"const addressProvince = \"QA State\" ",
					"const addressDistrict = \"QA District\" ",
					"const addressCity = \"QA Ward\" ",
					"const nid = getRandomInt(1111111111, 9999999999)",
					"",
					"const reasonsForSampleCancellation = [",
					"    ['Improperly ordered', '281264009'],",
					"    ['No sample collected', '281266006'],",
					"    ['Sample rejected', '135839007']",
					"]",
					"",
					"const reasonsForSampleCancellationIndex = getRandomInt(0, reasonsForSampleCancellation.length - 1)",
					"const reasonForSampleCancellationDisplay = reasonsForSampleCancellation[reasonsForSampleCancellationIndex][0]",
					"const reasonForSampleCancellationCode = reasonsForSampleCancellation[reasonsForSampleCancellationIndex][1]",
					"",
					"pm.variables.set('sampleRejectionCode', reasonForSampleCancellationCode)",
					"pm.variables.set('sampleRejectionDisplay', reasonForSampleCancellationDisplay)",
					"",
					"",
					"pm.variables.set('bundleID', uuid.v4())",
					"pm.variables.set('resultBundleID', uuid.v4())",
					"pm.variables.set('labRejectionBundleID', uuid.v4())",
					"",
					"pm.variables.set('labResultRejectionGuid', uuid.v4())",
					"pm.variables.set('serviceRequestIdentifier', serviceRequestIdentifier)",
					"",
					"pm.variables.set('requestingPractitionerGuid', uuid.v4())",
					"pm.variables.set('performingPractitionerGuid', uuid.v4())",
					"pm.variables.set('resultsGuid', uuid.v4())",
					"pm.variables.set('specimenGuid', uuid.v4())",
					"pm.variables.set('diagnosticReportGuid', uuid.v4())",
					"",
					"pm.variables.set('randomFirstName', firstName)",
					"pm.variables.set('randomLastName', lastName)",
					"pm.variables.set('birthDate', dateOfBirth)",
					"pm.variables.set('randomCountry', addressCountry)",
					"pm.variables.set('randomState', addressProvince)",
					"pm.variables.set('randomDistrict', addressDistrict)",
					"pm.variables.set('randomCity', addressCity)",
					"pm.variables.set('gender', gender)",
					"pm.variables.set('nid', nid)",
					"",
					"pm.variables.set('randomClientId', getRandomInt(1, 3))",
					"",
					"pm.variables.set('managingOrgFacilityCode', managingOrgFacilityCode)",
					"",
					"",
					"pm.variables.set('serviceRequestAuthoredDate', moment(visitDate).add(days, 'days').format('YYYY-MM-DD'))",
					"pm.variables.set('serviceRequestReasonCode', serviceRequestReasonCodes_SNOMED[getRandomInt(0, serviceRequestReasonCodes_SNOMED.length - 1)])",
					"pm.variables.set('randomCollectionDate', moment(visitDate).format('YYYY-MM-DD'))",
					"pm.variables.set('taskLastModifiedDate', moment(visitDate).format('YYYY-MM-DD'))",
					"pm.variables.set('taskProcessedDate', moment(visitDate).format('YYYY-MM-DD'))",
					"pm.variables.set('taskReceivedDate', moment(visitDate).format('YYYY-MM-DD'))",
					"pm.variables.set('resultDate', moment(visitDate).format('YYYY-MM-DD'))",
					"",
					"function getRandomInt(min, max) {",
					"    min = Math.ceil(min);",
					"    max = Math.floor(max);",
					"    return Math.floor(Math.random() * (max - min + 1)) + min;",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "TaskID",
			"value": ""
		},
		{
			"key": "SpecimenID",
			"value": ""
		},
		{
			"key": "PatientID",
			"value": ""
		},
		{
			"key": "ServiceRequestID",
			"value": ""
		},
		{
			"key": "DiagnosticReportID",
			"value": ""
		},
		{
			"key": "ObsID",
			"value": ""
		},
		{
			"key": "openhimUrl",
			"value": "http://localhost:5001",
			"type": "string"
		}
	]
}